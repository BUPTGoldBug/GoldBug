package bupt.ugrd.controller;

/**
 * Created by Luyao on 2018/1/20.
 */

import bupt.ugrd.model.*;
import bupt.ugrd.pojo.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.Iterator;


//@Controller
@RestController
@RequestMapping("/goldbug")
public class MainController {
    @Autowired // This means to get the bean called userinfoRepositor which is auto-generated by Spring, we will use it to handle the data
    private UserinfoRepository userinfoRepository;

    @Autowired
    private ContentRepository contentRepository;

    @Autowired
    private BuginfoRepository buginfoRepository;

    @Autowired
    private Buginfo2Repository buginfo2Repository;

    @RequestMapping("addUser")
    public @ResponseBody Result addNewUser(@RequestBody User user){
        Userinfo n = new Userinfo(user.getUserPhone(), user.getUserName(), user.getCreateTime());
        userinfoRepository.save(n);
        Iterable<Userinfo> list = userinfoRepository.findAll();
        for(Userinfo a:list){
            if(a.getUserName().equals("luy")){
                System.out.println(a.getCreateTime());
            }
        }
        return new Result(true, "success", 0);
    }

    public Userinfo findUserByName(String userName) {
        Iterable<Userinfo> users = userinfoRepository.findAll();
        Iterator<Userinfo> it= users.iterator();

        while(it.hasNext()){
            Userinfo user = it.next();
            if(user.getUserName().equals(userName)){
                return user;
            }
        }
        return null;
    }



    @RequestMapping("addGoldBug") //@RequestBody BugInfo bugInfo, @RequestBody Content content
    public @ResponseBody Result addNewGoldbug(@RequestBody BugContent bugContent){

        BugInfo bugInfo = bugContent.getBugInfo();

        Buginfo bug = new Buginfo();
        bug.setDeathTime(bugInfo.getDeathTime());
        bug.setStartTime(bugInfo.getStartTime());
        bug.setStart_lat(bugInfo.getStart_lat());
        bug.setStart_lon(bugInfo.getStart_lon());
        bug.setEnd_lat(bugInfo.getEnd_lat());
        bug.setEnd_lon(bugInfo.getEnd_lon());
        bug.setIfNeedStartTime(bugInfo.isIfNeedStartTime());
        bug.setIsMoved(bugInfo.isMoved());
        bug.setLifecount(bugInfo.getLifecount());
        bug.setPlanter(bugInfo.getPlanter());
        buginfoRepository.save(bug);



        Buginfo2 buginfo2 = new Buginfo2();
        buginfo2.setBugId(bug);
        buginfo2.setLifecount(bugInfo.getLifecount());
        buginfo2Repository.save(buginfo2);
        System.out.println("This New BUG is Connecting with  Bug "+buginfo2.getBugId().getId()+"in the Table BugInfo~~~~~~~~~`");


        bupt.ugrd.pojo.Content content = bugContent.getContent();

        bupt.ugrd.model.Content cont = new bupt.ugrd.model.Content();
        cont.setBugId(bug.getId());
        cont.setDescription(content.getDescription());
        cont.setQuestion(content.getQuestion());
        cont.setScore(content.getScore());
        cont.setAns_1(content.getAns_1());
        cont.setAns_2(content.getAns_2());
        cont.setAns_3(content.getAns_3());
        cont.setAns_4(content.getAns_4());
        cont.setContentType(content.getContentType());
        cont.setKey_(content.getKey_());
        contentRepository.save(cont);

        return new Result(true, "sucess", 0);

    }

        /*
    public Timechange findTimeChangeById(Integer id){
        Iterable<Timechange> timechanges = timechangeRepository.findAll();
        Iterator<Timechange> it= timechanges.iterator();

        while(it.hasNext()){
            Timechange timechange = it.next();
            if(timechange.getId().equals(id)){
                return timechange;
            }
        }
        return null;
    }

    public Poschange findPosChangeById(Integer id){
        Iterable<Poschange> poschanges = poschangeRepository.findAll();
        Iterator<Poschange> it= poschanges.iterator();

        while(it.hasNext()){
            Poschange poschange = it.next();
            if(poschange.getId().equals(id)){
                return poschange;
            }
        }
        return null;
    }*/


}
